{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","servings","className","style","recipe","src","alt","map","ingredient","text","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","getRecipes","a","fetch","response","json","data","hits","console","log","useEffect","updateSearch","e","target","value","onSubmit","preventDefault","placeholder","type","onChange","autofocus","label","yield","toFixed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iQAqBeA,EAjBA,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,SACpD,OAEE,sBAAKC,UAAWC,IAAMC,OAAtB,UACE,6BAAKP,IACL,qBAAKQ,IAAKN,EAAOO,IAAI,GAAGJ,UAAWC,IAAMJ,QACzC,uDAA0BD,KAC1B,2CAAcG,KACd,6BACGD,EAAYO,KAAI,SAAAC,GAAU,OACzB,6BAAKA,EAAWC,gBCyDXC,G,MAnEH,WAGV,IAGA,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAGA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAIA,EAA0BJ,mBAAS,WAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAGMC,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCJ,EAApC,mBAdf,WAce,oBAbd,qCAYG,cACXK,EADW,gBAGEA,EAASC,OAHX,OAGXC,EAHW,OAIjBV,EAAWU,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MALA,2CAAH,qDAShBG,qBAAW,WACTT,MAEC,CAACF,IAGJ,IAAMY,EAAe,SAAAC,GACnBd,EAAUc,EAAEC,OAAOC,QAYrB,OACE,sBAAK7B,UAAU,MAAf,UACE,uBAAM8B,SATQ,SAAAH,GAChBA,EAAEI,iBACFhB,EAASH,GAETC,EAAU,KAKmBb,UAAU,cAArC,UACE,uBAAOgC,YAAY,mCAAmChC,UAAU,mBAAmBiC,KAAK,OAAOJ,MAAOjB,EAAQsB,SAAUR,EAAcS,WAAS,IAC/I,uBAAOH,YAAY,YAAYhC,UAAU,mBAAmBiC,KAAK,OAAOJ,MAAOjB,EAAQsB,SAAUR,EAAcS,WAAS,IACxH,wBAAQnC,UAAU,gBAAgBiC,KAAK,SAAvC,uBAEF,qBAAKjC,UAAU,UAAf,SACGU,EAAQL,KAAI,SAAAH,GAAM,OACjB,cAAC,EAAD,CAEEP,MAAOO,EAAOA,OAAOkC,MACrBxC,UAAYM,EAAOA,OAAON,SAAWM,EAAOA,OAAOmC,OAAQC,UAC3DzC,MAAOK,EAAOA,OAAOL,MACrBE,SAAUG,EAAOA,OAAOmC,MACxBvC,YAAaI,EAAOA,OAAOJ,aALtBI,EAAOA,OAAOkC,iBC9ChBG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,yB","file":"static/js/main.d3478885.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './recipe.module.css';\r\n// import bootstrap from 'bootstrap';\r\n\r\nconst Recipe = ({title, calories, image, ingredients, servings}) => {\r\n  return (\r\n\r\n    <div className={style.recipe}>\r\n      <h2>{title}</h2>\r\n      <img src={image} alt=\"\" className={style.image}/>\r\n      <p>Calories per serving: {calories}</p>\r\n      <p>Servings: {servings}</p>\r\n      <ul>\r\n        {ingredients.map(ingredient => (\r\n          <li>{ingredient.text}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Recipe;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Recipe from './Recipe';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n\r\n  // make request to API\r\n  const APP_ID = \"8b48f81e\";\r\n  const APP_KEY = \"0bfda5d3d9e0f57fe62a067244efbd42\";\r\n\r\n  const [recipes, setRecipes] = useState([]); // Set recipe data to empty array\r\n\r\n  // Create state for search\r\n  const [search, setSearch] = useState('');\r\n\r\n  // Create state that only updates after search button is clicked\r\n  // not every time the state of the search bar changes\r\n  const [query, setQuery] = useState('chicken');\r\n\r\n  // Constant to handle fetching data\r\n  const getRecipes = async () => {\r\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\r\n    // Format fetched data\r\n    const data = await response.json();\r\n    setRecipes(data.hits);\r\n    console.log(data.hits);\r\n  }\r\n\r\n  // Run only when query is submitted\r\n  useEffect( () => {\r\n    getRecipes();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [query]);\r\n\r\n  // Set event to update search to user input onChange\r\n  const updateSearch = e => {\r\n    setSearch(e.target.value);\r\n    // console.log(search);\r\n  }\r\n\r\n  // Run getSearch when the form is submitted\r\n  const getSearch = e => {\r\n    e.preventDefault();\r\n    setQuery(search);\r\n    // Reset input field to empty\r\n    setSearch('');\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <form onSubmit={getSearch} className=\"search-form\">\r\n        <input placeholder=\"Search ingredients and dishes...\" className=\"search-bar large\" type=\"text\" value={search} onChange={updateSearch} autofocus />\r\n        <input placeholder=\"Search...\" className=\"search-bar small\" type=\"text\" value={search} onChange={updateSearch} autofocus />\r\n        <button className=\"search-button\" type=\"submit\">Search</button>\r\n      </form>\r\n      <div className=\"recipes\">\r\n        {recipes.map(recipe => (\r\n          <Recipe\r\n            key={recipe.recipe.label}\r\n            title={recipe.recipe.label}\r\n            calories={((recipe.recipe.calories)/(recipe.recipe.yield)).toFixed()}\r\n            image={recipe.recipe.image}\r\n            servings={recipe.recipe.yield}\r\n            ingredients={recipe.recipe.ingredients}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__3k1fb\",\"image\":\"recipe_image__3k1Xc\"};"],"sourceRoot":""}